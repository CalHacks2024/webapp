/*
  Auto-generated by Spline
*/

import useSpline from '@splinetool/r3f-spline';
import { OrthographicCamera } from '@react-three/drei';
import { useEffect, useRef } from 'react';
import { useFrame } from '@react-three/fiber';

export default function Scene({ ...props }) {
  const { nodes, materials } = useSpline('https://prod.spline.design/i13o1f6MZeZT8OEj/scene.splinecode');
  const cameraRef = useRef();
  const mouse = useRef({ x: 0, y: 0 });

  // Update the mouse position on mouse move
  const handleMouseMove = (event) => {
    mouse.current.x = (event.clientX / window.innerWidth) * 2 - 1;
    mouse.current.y = -(event.clientY / window.innerHeight) * 2 + 1;
  };

  // Add event listener for mouse move
  useEffect(() => {
    window.addEventListener('mousemove', handleMouseMove);
    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
    };
  }, []);

  // Update the camera position based on the mouse position
  useFrame(() => {
    if (cameraRef.current) {
      // Adjust these values for smoothness and range of movement
      cameraRef.current.position.x = mouse.current.x * 10; // Adjust multiplier for sensitivity
      cameraRef.current.position.y = mouse.current.y * 5; // Adjust multiplier for sensitivity
    }
  });

  return (
    <>
      <color attach="background" args={['#74757a']} />
      <group {...props} dispose={null}>
        <scene name="Scene 1">
          <group name="Glasses Coloured" position={[65.9, -2.45, 100.37]} rotation={[.15, -0.7, 0]}>
            <mesh
              name="Left Ear"
              geometry={nodes['Left Ear'].geometry}
              material={materials['Left Ear Material']}
              castShadow
              receiveShadow
              position={[-217.46, 59.94, -5.31]}
              rotation={[-Math.PI, 1.56, -Math.PI]}
              scale={1}
            />
            <mesh
              name="Right Ear"
              geometry={nodes['Right Ear'].geometry}
              material={materials['Right Ear Material']}
              castShadow
              receiveShadow
              position={[197.25, 59.94, -8.26]}
              rotation={[-Math.PI, 1.56, -Math.PI]}
              scale={1}
            />
            <group name="Lenses" position={[-0.34, 2.36, 8.44]}>
              <mesh
                name="Right Lense"
                geometry={nodes['Right Lense'].geometry}
                material={materials['Right Lense Material']}
                castShadow
                receiveShadow
                position={[35.05, 32.53, -5.13]}
                rotation={[-0.01, 0.01, 0]}
                scale={1}
              />
              <mesh
                name="Left Lense"
                geometry={nodes['Left Lense'].geometry}
                material={materials['Left Lense Material']}
                castShadow
                receiveShadow
                position={[-180.25, 37.93, -3.33]}
                rotation={[-0.01, 0.01, 0]}
                scale={1}
              />
            </group>
            <mesh
              name="Boolean 2"
              geometry={nodes['Boolean 2'].geometry}
              material={nodes['Boolean 2'].material}
              castShadow
              receiveShadow
              position={[0.03, 0.08, 0.05]}
              rotation={[0, 0, 0]}
              scale={1}
            />
            <group name="Front Cameras" position={[0.12, 39.86, 9.57]}>
              <group name="Right" position={[205.58, -0.18, -3.33]}>
                <mesh
                  name="Ellipse"
                  geometry={nodes.Ellipse.geometry}
                  material={materials['Ellipse Material']}
                  castShadow
                  receiveShadow
                  position={[0.18, 0, -1]}
                />
                <mesh
                  name="Left"
                  geometry={nodes.Left.geometry}
                  material={materials['Left Material']}
                  castShadow
                  receiveShadow
                  position={[0, 0, -0.23]}
                  scale={[1, 0.99, 1]}
                />
              </group>
              <group name="Left1" position={[-206.37, -1.28, 0.21]}>
                <mesh
                  name="Ellipse1"
                  geometry={nodes.Ellipse1.geometry}
                  material={materials['Ellipse1 Material']}
                  castShadow
                  receiveShadow
                  position={[0.18, 0, -1]}
                />
                <mesh
                  name="Left2"
                  geometry={nodes.Left2.geometry}
                  material={materials['Left2 Material']}
                  castShadow
                  receiveShadow
                  position={[0, 0, -0.23]}
                  scale={[1, 0.99, 1]}
                />
              </group>
            </group>
          </group>
          <directionalLight
            name="Directional Light"
            castShadow
            intensity={0.7}
            shadow-mapSize-width={1024}
            shadow-mapSize-height={1024}
            shadow-camera-near={-10000}
            shadow-camera-far={100000}
            shadow-camera-left={-1000}
            shadow-camera-right={1000}
            shadow-camera-top={1000}
            shadow-camera-bottom={-1000}
            position={[200, 300, 300]}
          />
          <OrthographicCamera ref={cameraRef} name="1" makeDefault={true} far={10000} near={-50000} />
          <hemisphereLight name="Default Ambient Light" intensity={0.75} color="#eaeaea" />
        </scene>
      </group>
    </>
  );
}


// /*
//   Auto-generated by Spline
// */

// import useSpline from '@splinetool/r3f-spline'
// import { OrthographicCamera } from '@react-three/drei'

// export default function Scene({ ...props }) {
//   const { nodes, materials } = useSpline('https://prod.spline.design/i13o1f6MZeZT8OEj/scene.splinecode')
//   return (
//     <>
//       <color attach="background" args={['#74757a']} />
//       <group {...props} dispose={null}>
//         <scene name="Scene 1">
//           <group name="Glasses Coloured" position={[65.9, -2.45, 100.37]} rotation={[0, -0.01, 0]}>
//             <mesh
//               name="Left Ear"
//               geometry={nodes['Left Ear'].geometry}
//               material={materials['Left Ear Material']}
//               castShadow
//               receiveShadow
//               position={[-217.46, 59.94, -5.31]}
//               rotation={[-Math.PI, 1.56, -Math.PI]}
//               scale={1}
//             />
//             <mesh
//               name="Right Ear"
//               geometry={nodes['Right Ear'].geometry}
//               material={materials['Right Ear Material']}
//               castShadow
//               receiveShadow
//               position={[197.25, 59.94, -8.26]}
//               rotation={[-Math.PI, 1.56, -Math.PI]}
//               scale={1}
//             />
//             <group name="Lenses" position={[-0.34, 2.36, 8.44]}>
//               <mesh
//                 name="Right Lense"
//                 geometry={nodes['Right Lense'].geometry}
//                 material={materials['Right Lense Material']}
//                 castShadow
//                 receiveShadow
//                 position={[35.05, 32.53, -5.13]}
//                 rotation={[-0.01, 0.01, 0]}
//                 scale={1}
//               />
//               <mesh
//                 name="Left Lense"
//                 geometry={nodes['Left Lense'].geometry}
//                 material={materials['Left Lense Material']}
//                 castShadow
//                 receiveShadow
//                 position={[-180.25, 37.93, -3.33]}
//                 rotation={[-0.01, 0.01, 0]}
//                 scale={1}
//               />
//             </group>
//             <mesh
//               name="Boolean 2"
//               geometry={nodes['Boolean 2'].geometry}
//               material={nodes['Boolean 2'].material}
//               castShadow
//               receiveShadow
//               position={[0.03, 0.08, 0.05]}
//               rotation={[0, 0, 0]}
//               scale={1}
//             />
//             <group name="Front Cameras" position={[0.12, 39.86, 9.57]}>
//               <group name="Right" position={[205.58, -0.18, -3.33]}>
//                 <mesh
//                   name="Ellipse"
//                   geometry={nodes.Ellipse.geometry}
//                   material={materials['Ellipse Material']}
//                   castShadow
//                   receiveShadow
//                   position={[0.18, 0, -1]}
//                 />
//                 <mesh
//                   name="Left"
//                   geometry={nodes.Left.geometry}
//                   material={materials['Left Material']}
//                   castShadow
//                   receiveShadow
//                   position={[0, 0, -0.23]}
//                   scale={[1, 0.99, 1]}
//                 />
//               </group>
//               <group name="Left1" position={[-206.37, -1.28, 0.21]}>
//                 <mesh
//                   name="Ellipse1"
//                   geometry={nodes.Ellipse1.geometry}
//                   material={materials['Ellipse1 Material']}
//                   castShadow
//                   receiveShadow
//                   position={[0.18, 0, -1]}
//                 />
//                 <mesh
//                   name="Left2"
//                   geometry={nodes.Left2.geometry}
//                   material={materials['Left2 Material']}
//                   castShadow
//                   receiveShadow
//                   position={[0, 0, -0.23]}
//                   scale={[1, 0.99, 1]}
//                 />
//               </group>
//             </group>
//           </group>
//           <directionalLight
//             name="Directional Light"
//             castShadow
//             intensity={0.7}
//             shadow-mapSize-width={1024}
//             shadow-mapSize-height={1024}
//             shadow-camera-near={-10000}
//             shadow-camera-far={100000}
//             shadow-camera-left={-1000}
//             shadow-camera-right={1000}
//             shadow-camera-top={1000}
//             shadow-camera-bottom={-1000}
//             position={[200, 300, 300]}
//           />
//           <OrthographicCamera name="1" makeDefault={true} far={10000} near={-50000} />
//           <hemisphereLight name="Default Ambient Light" intensity={0.75} color="#eaeaea" />
//         </scene>
//       </group>
//     </>
//   )
// }
